AWSTemplateFormatVersion: 2010-09-09
Description: Template for deploying an AWS CloudFormation stack to deploy a Terraform template.
Parameters:
  TerraformVersion:
    Type: String
    Default: 1.2.3
    Description: Terraform version to use.
  Repository:
    Type: String
    Default: cr-trojan23/aws-terraform
    Description: Git repository to use.
  Branch:
    Type: String
    Default: main
    Description: Git branch to use.
Metadata:
  AWS:CloudFormation::Interface:
    ParameterGroups:
      - Label: Terraform
        Parameters:
          - TerraformVersion
      - Label: Git
        Parameters:
          - Repository
          - Branch
Resources:
  CodeStarConnection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: gh-connection
      ProviderType: GitHub
      Tags:
        - Key: 'Name'
          Value: 'github-terraform-connection'
        - Key: 'CreatedBy'
          Value: 'AWS CFN'

  TerraformStateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "tf-state-backend1"
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: 'Name'
          Value: 'tf-state-backend1'
        - Key: 'CreatedBy'
          Value: 'AWS CFN'

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: artifacts-bucket-v1
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: 'Name'
          Value: 'artifacts-bucket-v1'
        - Key: 'CreatedBy'
          Value: 'AWS CFN'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "Deploy Terraform Template"
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: SourceStage
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref CodeStarConnection
                FullRepositoryId: !Ref Repository
                BranchName: !Ref Branch
              RunOrder: 1
        - Name: BuildStage
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref BuildProject
              RunOrder: 1
      Tags:
        - Key: 'Name'
          Value: 'Deploy Terraform Template'
        - Key: 'CreatedBy'
          Value: 'AWS CFN'
  
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: 'Name'
          Value: 'PipelineRole'
        - Key: 'CreatedBy'
          Value: 'AWS CFN'
  
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
      Name: cf-terraform-build
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              commands:
                - "yum install wget unzip -y"
                - "wget https://releases.hashicorp.com/terraform/1.2.3/terraform_1.2.3_linux_amd64.zip"
                - "unzip terraform_1.2.3_linux_amd64.zip"
                - "mv terraform /usr/local/bin/"
            pre_build:
              commands:
                - terraform init
            build:
              commands:
                - terraform apply -auto-approve
            post_build:
              commands:
                - echo terraform apply completed at `date`
      Tags:
        - Key: 'Name'
          Value: 'cf-terraform-build'
        - Key: 'CreatedBy'
          Value: 'AWS CFN'
  
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: 'Name'
          Value: 'CodeBuildServiceRole'
        - Key: 'CreatedBy'
          Value: 'AWS CFN'